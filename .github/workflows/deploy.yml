# name: Backend CI/CD Pipeline (Direct Dist Copy)

# on:
#   push:
#     branches: [main]   # Trigger when code is pushed to main

# jobs:
#   build:
#     name: Build and Prepare Artifacts
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Build TypeScript
#         run: npm run build

#       - name: Upload build for deployment
#         uses: actions/upload-artifact@v4
#         with:
#           name: backend-dist
#           path: |
#             dist/
#             package.json
#             package-lock.json
#             .env

#   deploy:
#     name: Deploy to AWS EC2
#     needs: build
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Download build artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: backend-dist
#           path: .

#       - name: Copy build files to EC2 (no compression)
#         uses: appleboy/scp-action@v0.1.4
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           port: 22
#           source: "./dist/*,package.json,package-lock.json,.env"
#           target: "/home/ubuntu/fixomojo-backend"

#       - name: Deploy on EC2 and Restart App
#         uses: appleboy/ssh-action@v1.0.0
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           port: 22
#           script: |
#             cd /home/ubuntu/fixomojo-backend

#             echo "ðŸ§¹ Cleaning previous dependencies..."
#             rm -rf node_modules

#             echo "ðŸ“¦ Installing production dependencies..."
#             npm install 

#             echo "ðŸš€ Restarting backend using PM2..."
#             if pm2 describe fixomojo > /dev/null; then
#               pm2 restart fixomojo
#             else
#               pm2 start dist/server.js --name fixomojo
#             fi

#             pm2 save
#             echo "âœ… Deployment completed successfully!"

name: Backend CI/CD Pipeline (SSH Deployment)

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build for deployment
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: |
            dist/
            package.json
            package-lock.json
            .env

  deploy:
    name: Deploy to AWS EC2
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: .

      - name: Copy build to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "./dist/*,package.json,package-lock.json,.env"
          target: "/home/ubuntu/fixomojo-backend"

      - name: Restart App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/fixomojo-backend
            echo "ðŸ“¦ Installing clean production dependencies..."
            npm ci --production --silent

            echo "ðŸš€ Restarting backend using PM2..."
            if pm2 describe fixomojo > /dev/null; then
              pm2 restart fixomojo
            else
              pm2 start dist/server.js --name fixomojo
            fi

            pm2 save
            echo "âœ… Deployment completed successfully!"
